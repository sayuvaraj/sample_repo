Write a function that finds and returns a common element in all rows. 
If there is no common element, then returns -1. 

Sample Test Cases :
Case 1:
Input :=
4 5
1 2 3 4 5
5 6 7 8 9
4 5 6 7 8
2 3 4 5 6
output :=5

Case 2:
input :=
5 4
10 30 45 46
1 2 10 20
10 12 13 14
2 3 4 10
7 8 9 10
output =10
*/

//Solution//


import java.util.*;
class Solution{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int m=sc.nextInt();
        int n=sc.nextInt();
        int arr[][]=new int [m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                arr[i][j]=sc.nextInt();
            }
        }
       HashMap<Integer,HashSet<Integer>>h=new HashMap<>();
          for(int i=0;i<n;i++){
              if(!h.containsKey(arr[0][i])){
                 HashSet<Integer>h1=new HashSet<>();
                 h1.add(0);
                 h.put(arr[0][i],h1);
              }
              else{
                  h.get(arr[0][i]).add(0);
              }
          }
        for(int i=1;i<m;i++){
            for(int j=0;j<n;j++){
                int item=arr[i][j];
                
                if(h.containsKey(item)){
                    HashSet<Integer>h3=h.get(item);
                    if(!h3.contains(i)){

// commited mistake in the line
                  h3.add(i);
                    h.put(item,h3);
                    }
                }
            }
        }
        int flag=0;
        for(Map.Entry<Integer,HashSet<Integer>>t:h.entrySet()){
            //HashSet<Integer>h2=t.getValue();
            if(t.getValue().size()==m){
            flag=1;
                System.out.println(t.getKey()+" ");
            }
        }
        if(flag==0){
            System.out.println("-1");
        }
    }
}